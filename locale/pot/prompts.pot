# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014 Pallets
# This file is distributed under the same license as the Click package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Click 8.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-07 10:39+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../click/docs/prompts.rst:2
msgid "User Input Prompts"
msgstr ""

#: ../../click/docs/prompts.rst:6
msgid "Click supports prompts in two different places.  The first is automated prompts when the parameter handling happens, and the second is to ask for prompts at a later point independently."
msgstr ""

#: ../../click/docs/prompts.rst:10
msgid "This can be accomplished with the :func:`prompt` function, which asks for valid input according to a type, or the :func:`confirm` function, which asks for confirmation (yes/no)."
msgstr ""

#: ../../click/docs/prompts.rst:15
msgid "Option Prompts"
msgstr ""

#: ../../click/docs/prompts.rst:17
msgid "Option prompts are integrated into the option interface.  See :ref:`option-prompting` for more information.  Internally, it automatically calls either :func:`prompt` or :func:`confirm` as necessary."
msgstr ""

#: ../../click/docs/prompts.rst:22
msgid "Input Prompts"
msgstr ""

#: ../../click/docs/prompts.rst:24
msgid "To manually ask for user input, you can use the :func:`prompt` function. By default, it accepts any Unicode string, but you can ask for any other type.  For instance, you can ask for a valid integer::"
msgstr ""

#: ../../click/docs/prompts.rst:30
msgid "Additionally, the type will be determined automatically if a default value is provided.  For instance, the following will only accept floats::"
msgstr ""

#: ../../click/docs/prompts.rst:36
msgid "Confirmation Prompts"
msgstr ""

#: ../../click/docs/prompts.rst:38
msgid "To ask if a user wants to continue with an action, the :func:`confirm` function comes in handy.  By default, it returns the result of the prompt as a boolean value::"
msgstr ""

#: ../../click/docs/prompts.rst:45
msgid "There is also the option to make the function automatically abort the execution of the program if it does not return ``True``::"
msgstr ""
